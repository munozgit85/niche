"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var BadRequestError_1 = require("./http/BadRequestError");
/**
 * Caused when user parameter is given, but is invalid and cannot be parsed.
 */
var ParameterParseJsonError = (function (_super) {
    __extends(ParameterParseJsonError, _super);
    function ParameterParseJsonError(parameterName, value) {
        var _this = _super.call(this, "Given parameter " + parameterName + " is invalid. Value (" + JSON.stringify(value) + ") cannot be parsed to JSON") || this;
        _this.name = "ParameterParseJsonError";
        return _this;
    }
    return ParameterParseJsonError;
}(BadRequestError_1.BadRequestError));
exports.ParameterParseJsonError = ParameterParseJsonError;

//# sourceMappingURL=ParameterParseJsonError.js.map
