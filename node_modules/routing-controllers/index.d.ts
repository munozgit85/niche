import { MetadataArgsStorage } from "./metadata-builder/MetadataArgsStorage";
import { RoutingControllersOptions } from "./RoutingControllersOptions";
/**
 * Registers all loaded actions in your express application.
 */
export declare function useExpressServer<T>(expressApp: T, options?: RoutingControllersOptions): T;
/**
 * Registers all loaded actions in your express application.
 */
export declare function createExpressServer(options?: RoutingControllersOptions): any;
/**
 * Registers all loaded actions in your koa application.
 */
export declare function useKoaServer<T>(koaApp: T, options?: RoutingControllersOptions): T;
/**
 * Registers all loaded actions in your koa application.
 */
export declare function createKoaServer(options?: RoutingControllersOptions): any;
/**
 * Gets the metadata arguments storage.
 */
export declare function defaultMetadataArgsStorage(): MetadataArgsStorage;
export * from "./container";
export * from "./decorator/controllers";
export * from "./decorator/decorators";
export * from "./decorator/methods";
export * from "./decorator/params";
export * from "./error";
export * from "./middleware/MiddlewareInterface";
export * from "./middleware/InterceptorInterface";
export * from "./middleware/ErrorMiddlewareInterface";
export * from "./RoutingControllersOptions";
export * from "./error/http/HttpError";
export * from "./error/http/InternalServerError";
export * from "./error/http/BadRequestError";
export * from "./error/http/ForbiddenError";
export * from "./error/http/NotAcceptableError";
export * from "./error/http/MethodNotAllowedError";
export * from "./error/http/NotFoundError";
export * from "./error/http/UnauthorizedError";
