{"version":3,"sources":["../../src/metadata/InterceptorMetadata.ts"],"names":[],"mappings":";AAAA,0CAA8C;AAI9C;IAqBI,4EAA4E;IAC5E,cAAc;IACd,4EAA4E;IAE5E,6BAAY,IAA6B;QACrC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAClC,CAAC;IAMD,sBAAI,yCAAQ;QAJZ,4EAA4E;QAC5E,YAAY;QACZ,4EAA4E;aAE5E;YACI,MAAM,CAAC,4BAAgB,CAAuB,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/D,CAAC;;;OAAA;IAEL,0BAAC;AAAD,CAvCA,AAuCC,IAAA;AAvCY,kDAAmB","file":"InterceptorMetadata.js","sourcesContent":["import {getFromContainer} from \"../container\";\nimport {InterceptorInterface} from \"../middleware/InterceptorInterface\";\nimport {InterceptorMetadataArgs} from \"./args/InterceptorMetadataArgs\";\n\nexport class InterceptorMetadata {\n\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Indicates if this interceptor is global, thous applied to all routes.\n     */\n    isGlobal: boolean;\n\n    /**\n     * Object class of the interceptor class.\n     */\n    target: Function;\n\n    /**\n     * Execution priority of the interceptor.\n     */\n    priority: number;\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    \n    constructor(args: InterceptorMetadataArgs) {\n        this.isGlobal = args.isGlobal;\n        this.target = args.target;\n        this.priority = args.priority;\n    }\n\n    // -------------------------------------------------------------------------\n    // Accessors\n    // -------------------------------------------------------------------------\n\n    get instance(): InterceptorInterface {\n        return getFromContainer<InterceptorInterface>(this.target);\n    }\n    \n}"],"sourceRoot":".."}