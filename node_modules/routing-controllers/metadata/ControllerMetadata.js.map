{"version":3,"sources":["../../src/metadata/ControllerMetadata.ts"],"names":[],"mappings":";AAGA,0CAA8C;AAG9C;IAoCI,4EAA4E;IAC5E,cAAc;IACd,4EAA4E;IAE5E,4BAAY,IAA4B;QACpC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;YACZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;YACX,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACV,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9B,CAAC;IAMD,sBAAI,2CAAW;QAJf,4EAA4E;QAC5E,YAAY;QACZ,4EAA4E;aAE5E;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAI,wCAAQ;aAAZ;YACI,MAAM,CAAC,4BAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC;;;OAAA;IAEL,yBAAC;AAAD,CA7DA,AA6DC,IAAA;AA7DY,gDAAkB","file":"ControllerMetadata.js","sourcesContent":["import {ActionMetadata} from \"./ActionMetadata\";\nimport {ControllerMetadataArgs} from \"./args/ControllerMetadataArgs\";\nimport {UseMetadata} from \"./UseMetadata\";\nimport {getFromContainer} from \"../container\";\nimport {UseInterceptorMetadata} from \"./UseInterceptorMetadata\";\n\nexport class ControllerMetadata {\n\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Controller actions.\n     */\n    actions: ActionMetadata[];\n\n    /**\n     * Indicates object which is used by this controller.\n     */\n    target: Function;\n\n    /**\n     * Base route for all actions registered in this controller.\n     */\n    route: string;\n\n    /**\n     * Controller type. Can be default or json-typed. Json-typed controllers operate with json requests and responses.\n     */\n    type: \"default\"|\"json\";\n\n    /**\n     * Middleware \"use\"-s applied to a whole controller.\n     */\n    uses: UseMetadata[];\n\n    /**\n     * Intercepts applied to a whole controller.\n     */\n    useInterceptors: UseInterceptorMetadata[];\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    \n    constructor(args: ControllerMetadataArgs) {\n        if (args.target)\n            this.target = args.target;\n        if (args.route)\n            this.route = args.route;\n        if (args.type)\n            this.type = args.type;\n    }\n\n    // -------------------------------------------------------------------------\n    // Accessors\n    // -------------------------------------------------------------------------\n    \n    get isJsonTyped() {\n        return this.type === \"json\";\n    }\n\n    get instance(): any {\n        return getFromContainer(this.target);\n    }\n    \n}"],"sourceRoot":".."}