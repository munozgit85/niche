import { MiddlewareMetadataArgs } from "./args/MiddlewareMetadataArgs";
import { MiddlewareInterface } from "../middleware/MiddlewareInterface";
import { ErrorMiddlewareInterface } from "../middleware/ErrorMiddlewareInterface";
export declare class MiddlewareMetadata {
    /**
     * Indicates if this middleware is global, thous applied to all routes.
     */
    isGlobal: boolean;
    /**
     * Object class of the middleware class.
     */
    target: Function;
    /**
     * Execution priority of the middleware.
     */
    priority: number;
    /**
     * Indicates if middleware must be executed after routing action is executed.
     */
    afterAction: boolean;
    constructor(args: MiddlewareMetadataArgs);
    readonly isErrorHandler: boolean;
    readonly isUseMiddleware: boolean;
    readonly instance: MiddlewareInterface;
    readonly errorHandlerInstance: ErrorMiddlewareInterface;
}
