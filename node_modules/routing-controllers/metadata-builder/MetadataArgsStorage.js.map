{"version":3,"sources":["../../src/metadata-builder/MetadataArgsStorage.ts"],"names":[],"mappings":"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","file":"MetadataArgsStorage.js","sourcesContent":["import {ControllerMetadataArgs} from \"../metadata/args/ControllerMetadataArgs\";\nimport {ActionMetadataArgs} from \"../metadata/args/ActionMetadataArgs\";\nimport {ParamMetadataArgs} from \"../metadata/args/ParamMetadataArgs\";\nimport {ResponseHandlerMetadataArgs} from \"../metadata/args/ResponseHandleMetadataArgs\";\nimport {MiddlewareMetadataArgs} from \"../metadata/args/MiddlewareMetadataArgs\";\nimport {UseMetadataArgs} from \"../metadata/args/UseMetadataArgs\";\nimport {UseInterceptorMetadataArgs} from \"../metadata/args/UseInterceptorMetadataArgs\";\nimport {InterceptorMetadataArgs} from \"../metadata/args/InterceptorMetadataArgs\";\n\n/**\n * Storage all metadatas read from decorators.\n */\nexport class MetadataArgsStorage {\n\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n\n    controllers: ControllerMetadataArgs[] = [];\n    middlewares: MiddlewareMetadataArgs[] = [];\n    interceptors: InterceptorMetadataArgs[] = [];\n    uses: UseMetadataArgs[] = [];\n    useInterceptors: UseInterceptorMetadataArgs[] = [];\n    actions: ActionMetadataArgs[] = [];\n    params: ParamMetadataArgs[] = [];\n    responseHandlers: ResponseHandlerMetadataArgs[] = [];\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    findMiddlewareMetadatasForClasses(classes: Function[]): MiddlewareMetadataArgs[] {\n        return this.middlewares.filter(ctrl => {\n            return classes.filter(cls => ctrl.target === cls).length > 0;\n        });\n    }\n\n    findInterceptorMetadatasForClasses(classes: Function[]): InterceptorMetadataArgs[] {\n        return this.interceptors.filter(ctrl => {\n            return classes.filter(cls => ctrl.target === cls).length > 0;\n        });\n    }\n\n    findControllerMetadatasForClasses(classes: Function[]): ControllerMetadataArgs[] {\n        return this.controllers.filter(ctrl => {\n            return classes.filter(cls => ctrl.target === cls).length > 0;\n        });\n    }\n\n    findActionsWithTarget(target: Function): ActionMetadataArgs[] {\n        return this.actions.filter(action => action.target === target);\n    }\n\n    findUsesWithTargetAndMethod(target: Function, methodName: string): UseMetadataArgs[] {\n        return this.uses.filter(use => {\n            return use.target === target && use.method === methodName;\n        });\n    }\n\n    findUseInterceptorWithTargetAndMethod(target: Function, methodName: string): UseInterceptorMetadataArgs[] {\n        return this.useInterceptors.filter(interceptor => {\n            return interceptor.target === target && interceptor.method === methodName;\n        });\n    }\n\n    findParamsWithTargetAndMethod(target: Function, methodName: string): ParamMetadataArgs[] {\n        return this.params.filter(param => {\n            return param.target === target && param.method === methodName;\n        });\n    }\n\n    findResponseHandlersWithTargetAndMethod(target: Function, methodName: string): ResponseHandlerMetadataArgs[] {\n        return this.responseHandlers.filter(property => {\n            return property.target === target && property.method === methodName;\n        });\n    }\n\n    /**\n     * Removes all saved metadata.\n     */\n    reset() {\n        this.controllers = [];\n        this.middlewares = [];\n        this.interceptors = [];\n        this.uses = [];\n        this.useInterceptors = [];\n        this.actions = [];\n        this.params = [];\n        this.responseHandlers = [];\n    }\n\n}"],"sourceRoot":".."}