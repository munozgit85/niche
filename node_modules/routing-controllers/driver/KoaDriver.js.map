{"version":3,"sources":["../../src/driver/KoaDriver.ts"],"names":[],"mappings":"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","file":"KoaDriver.js","sourcesContent":["import {ParamTypes} from \"../metadata/types/ParamTypes\";\nimport {ActionMetadata} from \"../metadata/ActionMetadata\";\nimport {HttpError} from \"../error/http/HttpError\";\nimport {MiddlewareMetadata} from \"../metadata/MiddlewareMetadata\";\nimport {ActionCallbackOptions} from \"../ActionCallbackOptions\";\nimport {BaseDriver} from \"./BaseDriver\";\nimport {classToPlain} from \"class-transformer\";\nimport {BadHttpActionError} from \"../error/BadHttpActionError\";\nimport {Driver} from \"./Driver\";\nimport {UseMetadata} from \"../metadata/UseMetadata\";\nimport {ParamMetadata} from \"../metadata/ParamMetadata\";\nimport {InterceptorMetadata} from \"../metadata/InterceptorMetadata\";\nimport {UseInterceptorMetadata} from \"../metadata/UseInterceptorMetadata\";\nimport {PromiseUtils} from \"../util/PromiseUtils\";\nconst cookie = require(\"cookie\");\n\n/**\n * Integration with koa framework.\n */\nexport class KoaDriver extends BaseDriver implements Driver {\n\n    // -------------------------------------------------------------------------\n    // Private Properties\n    // -------------------------------------------------------------------------\n\n    private router: any;\n    \n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(public koa?: any) {\n        super();\n        \n        if (require) {\n            if (!koa) {\n                try {\n                    this.koa = new (require(\"koa\"))();\n                } catch (e) {\n                    throw new Error(\"koa package was not found installed. Try to install it: npm install koa@next --save\");\n                }\n            }\n            try {\n                this.router = new (require(\"koa-router\"))();\n            } catch (e) {\n                throw new Error(\"koa-router package was not found installed. Try to install it: npm install koa-router@next --save\");\n            }\n        } else {\n            throw new Error(\"Cannot load koa. Try to install all required dependencies.\");\n        }\n\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    bootstrap() {\n        const bodyParser = require(\"koa-bodyparser\");\n        this.koa.use(bodyParser());\n    }\n    \n    registerErrorHandler(middleware: MiddlewareMetadata): void {\n    }\n\n    registerMiddleware(middleware: MiddlewareMetadata): void {\n        if (!middleware.instance.use)\n            return;\n        \n        this.koa.use(function (ctx: any, next: any) {\n            return middleware.instance.use(ctx, next);\n        });\n    }\n\n    registerAction(action: ActionMetadata,\n                   middlewares: MiddlewareMetadata[],\n                   interceptors: InterceptorMetadata[],\n                   executeCallback: (options: ActionCallbackOptions) => any): void {\n        const koaAction = action.type.toLowerCase();\n        if (!this.router[koaAction])\n            throw new BadHttpActionError(action.type);\n\n        const useInterceptors = action.controllerMetadata.useInterceptors.concat(action.useInterceptors);\n        const useInterceptorFunctions = this.registerIntercepts(useInterceptors, interceptors);\n        const globalUseInterceptors: Function[] = interceptors\n            .filter(interceptor => interceptor.isGlobal)\n            .sort((interceptor1, interceptor2) => interceptor1.priority - interceptor2.priority)\n            .reverse()\n            .map(interceptor => {\n                return function (request: any, response: any, result: any) {\n                    return interceptor.instance.intercept(request, response, result);\n                };\n            });\n\n        const defaultMiddlewares: any[] = [];\n        if (action.isBodyUsed) {\n            if (action.isJsonTyped) {\n                // defaultMiddlewares.push(require(\"koa-body-parser\")());\n            } else {\n                // defaultMiddlewares.push(require(\"koa-body-parser\")());\n            }\n        }\n        // file uploading is not working yet. need to implement it\n        /*if (action.isFileUsed || action.isFilesUsed) {\n            // todo: not implemented yet\n            const multer = require(\"koa-router-multer\");\n            action.params\n                .filter(param => param.type === ParamTypes.UPLOADED_FILE)\n                .forEach(param => {\n                    defaultMiddlewares.push(multer({ dest: \"uploads/\" }).single(param.name));\n                });\n            action.params\n                .filter(param => param.type === ParamTypes.UPLOADED_FILES)\n                .forEach(param => {\n                    defaultMiddlewares.push(multer(param.extraOptions).array(param.name));\n                });\n        }*/\n\n        const uses = action.controllerMetadata.uses.concat(action.uses);\n        const preMiddlewareFunctions = this.registerUses(uses.filter(use => !use.afterAction), middlewares);\n        const postMiddlewareFunctions = this.registerUses(uses.filter(use => use.afterAction), middlewares);\n\n        const routeHandler = (ctx: any, next: () => Promise<any>) => {\n            return new Promise((resolve, reject) => {\n                const options: ActionCallbackOptions = {\n                    request: ctx.request,\n                    response: ctx.response,\n                    next: (err: any) => {\n                        next().then(r => {\n                            if (err && !this.isDefaultErrorHandlingEnabled) {\n                                return reject(err);\n                            }\n                            resolve(r);\n                        }).catch(reject);\n                    },\n                    context: ctx,\n                    useInterceptorFunctions: globalUseInterceptors.concat(useInterceptorFunctions)\n                };\n                executeCallback(options);\n            });\n        };\n\n        const fullRoute = action.fullRoute instanceof RegExp\n            ? ActionMetadata.appendBaseRouteToRegexpRoute(action.fullRoute as RegExp, this.routePrefix)\n            : `${this.routePrefix}${action.fullRoute}`;\n        const routerParams: any[] = [fullRoute, ...preMiddlewareFunctions, ...defaultMiddlewares, routeHandler, ...postMiddlewareFunctions];\n        this.router[koaAction](...routerParams);\n    }\n    \n    registerRoutes() {\n        this.koa.use(this.router.routes());\n        this.koa.use(this.router.allowedMethods());\n    }\n\n    getParamFromRequest(actionOptions: ActionCallbackOptions, param: ParamMetadata): void {\n        const context = actionOptions.context;\n        const request: any = actionOptions.request;\n        switch (param.type) {\n            case ParamTypes.BODY:\n                return request.body;\n            case ParamTypes.PARAM:\n                return context.params[param.name];\n            case ParamTypes.SESSION:\n                throw new Error(\"@Session decorator is not supported by KoaDriver yet.\");\n                // TODO return session\n            case ParamTypes.QUERY:\n                return context.query[param.name];\n            case ParamTypes.UPLOADED_FILE:\n                throw new Error(\"@UploadedFile and @UploadedFiles decorators are not supported by KoaDriver yet.\");\n                // return actionOptions.context.req.file;\n            case ParamTypes.UPLOADED_FILES:\n                throw new Error(\"@UploadedFile and @UploadedFiles decorators are not supported by KoaDriver yet.\");\n                // return actionOptions.context.req.files;\n            case ParamTypes.HEADER:\n                return context.headers[param.name.toLowerCase()];\n            case ParamTypes.BODY_PARAM:\n                return request.body[param.name];\n            case ParamTypes.COOKIE:\n                if (!context.headers.cookie) return;\n                const cookies = cookie.parse(context.headers.cookie);\n                return cookies[param.name];\n        }\n    }\n\n    handleSuccess(result: any, action: ActionMetadata, options: ActionCallbackOptions): void {\n\n        if (this.useClassTransformer && result && result instanceof Object) {\n            const options = action.responseClassTransformOptions || this.classToPlainTransformOptions;\n            result = classToPlain(result, options);\n        }\n\n        const response: any = options.response;\n        const isResultUndefined = result === undefined;\n        const isResultNull = result === null;\n        const isResultEmpty = isResultUndefined || isResultNull || result === false || result === \"\";\n\n        // set http status\n        if (action.undefinedResultCode && isResultUndefined) {\n            response.status = action.undefinedResultCode;\n\n        } else if (action.nullResultCode && isResultNull) {\n            response.status = action.nullResultCode;\n\n        } else if (action.emptyResultCode && isResultEmpty) {\n            response.status = action.emptyResultCode;\n\n        } else if (action.successHttpCode) {\n            response.status = action.successHttpCode;\n        }\n\n        // apply http headers\n        Object.keys(action.headers).forEach(name => {\n            response.set(name, action.headers[name]);\n        });\n\n        if (action.redirect) { // if redirect is set then do it\n            response.redirect(action.redirect);\n            options.next();\n            // options.resolver();\n\n        } else if (action.renderedTemplate) { // if template is set then render it // todo: not working in koa\n            const renderOptions = result && result instanceof Object ? result : {};\n\n            this.koa.use(async function (ctx: any, next: any) {\n                await ctx.render(action.renderedTemplate, renderOptions);\n            });\n\n            options.next();\n        } else if (result !== undefined || action.undefinedResultCode) { // send regular result\n            if (result === null || (result === undefined && action.undefinedResultCode)) {\n\n                if (action.isJsonTyped) {\n                    response.body = null;\n                } else {\n                    response.body = null;\n                }\n\n                // todo: duplication. we make it here because after we set null to body koa seems overrides status\n                if (action.nullResultCode) {\n                    response.status = action.nullResultCode;\n\n                } else if (action.emptyResultCode) {\n                    response.status = action.emptyResultCode;\n\n                } else if (result === undefined && action.undefinedResultCode) {\n                    response.status = action.undefinedResultCode;\n                }\n\n                options.next();\n            } else {\n                if (action.isJsonTyped) {\n                    response.body = result;\n                } else {\n                    response.body = String(result);\n                }\n                options.next();\n            }\n            // options.resolver();\n\n        } else {\n            options.next();\n            // options.resolver();\n        }\n    }\n\n    handleError(error: any, action: ActionMetadata, options: ActionCallbackOptions): void {\n        if (this.isDefaultErrorHandlingEnabled) {\n            const response: any = options.response;\n\n            // set http status\n            // note that we can't use error instanceof HttpError properly anymore because of new typescript emit process\n            if (error.httpCode) {\n                options.context.status = error.httpCode;\n                response.status(error.httpCode);\n            } else {\n                options.context.status = 500;\n                // TODO: FIX response.status(500);\n            }\n\n            // apply http headers\n            Object.keys(action.headers).forEach(name => {\n                response.set(name, action.headers[name]);\n            });\n\n            // send error content\n            if (action.isJsonTyped) {\n                response.body = this.processJsonError(error);\n            } else {\n                response.body = this.processJsonError(error);\n            }\n        }\n        options.next(error);\n        // throw error;\n    }\n\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n\n    private registerIntercepts(useInterceptors: UseInterceptorMetadata[], interceptors: InterceptorMetadata[]) {\n        const interceptFunctions: Function[] = [];\n        useInterceptors.forEach(useInterceptor => {\n            if (useInterceptor.interceptor.prototype && useInterceptor.interceptor.prototype.intercept) { // if this is function instance of MiddlewareInterface\n                interceptors.forEach(interceptor => {\n                    if (interceptor.instance instanceof useInterceptor.interceptor) {\n                        interceptFunctions.push(function (request: any, response: any, result: any) {\n                            return interceptor.instance.intercept(request, response, result);\n                        });\n                    }\n                });\n\n            } else {\n                interceptFunctions.push(useInterceptor.interceptor);\n            }\n        });\n        return interceptFunctions;\n    }\n\n    private registerUses(uses: UseMetadata[], middlewares: MiddlewareMetadata[]) {\n        const middlewareFunctions: Function[] = [];\n        uses.forEach(use => {\n            if (use.middleware.prototype && use.middleware.prototype.use) { // if this is function instance of MiddlewareInterface\n                middlewares.forEach(middleware => {\n                    if (middleware.instance instanceof use.middleware) {\n                        middlewareFunctions.push(function(context: any, next: Function) {\n                            return middleware.instance.use(context, next);\n                        });\n                    }\n                });\n\n            } else {\n                middlewareFunctions.push(use.middleware);\n            }\n        });\n        return middlewareFunctions;\n    }\n\n}"],"sourceRoot":".."}